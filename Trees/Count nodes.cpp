/*
problem:
********
Given a tree and an integer x, find and return the number of nodes which contains data greater than x.
Sample Input 1 :
10 3 20 30 40 2 40 50 0 0 0 0
35 
Sample Output 1 :
3

Sample Input 2 :
10 3 20 30 40 2 40 50 0 0 0 0
10 
Sample Output 2:
5
*/





*****************************************************************************************************************************************************************************
*****************************************************************************************************************************************************************************

//solution:
***********

#include <iostream>
#include <queue>
#include <vector>
using namespace std;


template <typename T>
class TreeNode 
{
};


TreeNode<int>* takeInputLevelWise() 
{
}



int getLargeNodeCount(TreeNode<int>* root, int x) 
{
   static int count  = 0;
   if(root ==  NULL)
      return 0;
   if(root->data > x)
      count++;
   for(int i=0;i<root->children.size();i++)
   {
      getLargeNodeCount(root->children[i], x);
   }
   return count;
}



int main() 
{
   TreeNode<int>* root = takeInputLevelWise();
   int x;
   cin >> x;
   cout << getLargeNodeCount(root, x);
}






*****************************************************************************************************************************************************************************
*****************************************************************************************************************************************************************************
*****************************************************************************************************************************************************************************
*****************************************************************************************************************************************************************************





















