/*
problem:
********
Given a random integer array A of size N. Find and print the count of pair of elements in the array which sum up to 0.
Note: Array A can contain duplicate elements as well.

Constraints :
    0 <= N <= 10^4
    Time Limit: 1 sec
    
Sample Input 1:
5
2 1 -2 2 3
Sample Output 1:
2
*/






****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************

//solution-1:
*************

//Approach-1:
//Brute Force Approach
//T.C = O(N^2)
//S.C = O(1)

/*
int pairSum(int *arr, int n) 
{
   int count = 0;
	 for(int i=0;i<n-1;i++)
   {
      for(int j=i+1;j<n;j++)
      {
         if(arr[i] + arr[j] == 0)
         count++;
      }
   }
   return count;
}
*/







****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************

//solution-2:
**************

//Approach-2:
//using Hashing
//T.C = O(N*log(N))
//S.C = O(1)


#include <iostream>
#include <unordered_map>
using namespace std;

int pairSum(int *arr, int n) 
{
   unordered_map<int, int> freq;
   for(int i=0;i<n;i++)
   {
      freq[arr[i]]++;
   }
    
   int count = 0;
   for(int i=0;i<n;i++)
   {
      count = count + freq[-arr[i]];
      //incase if element is zero
      if(-arr[i] == arr[i])
      {
         freq[arr[i]]--;
         count--;
      }
      else
         freq[arr[i]]--;
   }
   return count;
}




nt main() 
{
   int n;
   cin >> n;
   int* arr = new int[n];
   for (int i = 0; i < n; ++i) 
   {
      cin >> arr[i];
   }
   cout << pairSum(arr, n);
   delete[] arr;
}







****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************



























