/*
problem:
********
For a given Binary Tree of integers, print the post-order traversal.

Sample Input 1:
1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
 Sample Output 1:
4 5 2 6 7 3 1 

Sample Input 2:
5 6 10 2 3 -1 -1 -1 -1 -1 9 -1 -1
 Sample Output 1:
2 9 3 6 10 5 
*/





****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************

//solution:
***********

#include <iostream>
#include <queue>
using namespace std;

template <typename T>
class BinaryTreeNode
{
};



BinaryTreeNode<int>* takeInput()
{
}




void postOrder(BinaryTreeNode<int> *root) 
{
   //base case
   if (root == NULL)
      return;
   postOrder(root->left);
   postOrder(root->right);
   cout << root->data << " ";
}




int main() 
{
   BinaryTreeNode<int>* root = takeInput();
   postOrder(root);
}






****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************



















