/*
problem:
********
For a given Binary Tree of integers, find and return the sum of all the nodes data.
Sample Input 1:
2 3 4 6 -1 -1 -1 -1 -1
Sample Output 1:
15
 
Sample Input 2:
1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1
Sample Output 2:
28
*/





****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************

//solution:
***********

#include <iostream>
#include <queue>
using namespace std;


template <typename T>
class BinaryTreeNode 
{
};


BinaryTreeNode<int>* takeInput()
{
}



int getSum(BinaryTreeNode<int>* root) 
{
   //base case
   if(root == NULL)
      return 0;
    
   int left_sum = getSum(root->left);
   int right_sum = getSum(root->right);
	 return (root->data + left_sum + right_sum);
}



int main() 
{
   BinaryTreeNode<int>* root = takeInput();
   cout << getSum(root);
}






****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************
****************************************************************************************************************************************************************************























